{"version":3,"sources":["assets/githubbackground.svg","assets/logo.svg","styles/global.ts","services/api.ts","pages/Dashboard/styles.ts","pages/Dashboard/index.tsx","pages/Repository/index.tsx","routes/index.tsx","App.tsx","index.tsx"],"names":["module","exports","createGlobalStyle","githubBackground","api","axios","create","baseURL","Title","styled","h1","Form","form","shade","Repositories","div","Dashboard","useState","newRepo","setNewRepo","repositories","setRepositories","event","a","preventDefault","get","response","repository","data","src","logoImg","alt","onSubmit","value","onChange","e","target","placeholder","type","map","key","full_name","href","owner","avatar_url","login","description","Routes","path","exact","component","Repository","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oGAAAA,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,okBCI5BC,kBAAf,IAS8BC,K,gECPfC,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,2B,+iDCAJ,IAAMC,EAAQC,IAAOC,GAAV,KASLC,EAAOF,IAAOG,KAAV,IA6BGC,YAAM,GAAK,YAKlBC,EAAeL,IAAOM,IAAV,KCqBVC,EAlDa,WAAO,IAAD,EACFC,mBAAS,IADP,mBACzBC,EADyB,KAChBC,EADgB,OAEQF,mBAAuB,IAF/B,mBAEzBG,EAFyB,KAEXC,EAFW,iDAIhC,WACEC,GADF,iBAAAC,EAAA,6DAGED,EAAME,iBAHR,SAKyBpB,EAAIqB,IAAJ,iBAA8BP,IALvD,OAKQQ,EALR,OAOQC,EAAaD,EAASE,KAE5BP,EAAgB,GAAD,mBAAKD,GAAL,CAAmBO,KAClCR,EAAW,IAVb,4CAJgC,sBAiBhC,OACE,oCACE,yBAAKU,IAAKC,IAASC,IAAI,oBACvB,kBAACvB,EAAD,0CAEA,kBAACG,EAAD,CAAMqB,SAtBsB,6CAuB1B,2BACEC,MAAOf,EACPgB,SAAU,SAAAC,GAAC,OAAIhB,EAAWgB,EAAEC,OAAOH,QACnCI,YAAY,oCAEd,4BAAQC,KAAK,UAAb,cAGF,kBAACxB,EAAD,KACGM,EAAamB,KAAI,SAAAZ,GAAU,OAC1B,uBAAGa,IAAKb,EAAWc,UAAWC,KAAK,SACjC,yBACEb,IAAKF,EAAWgB,MAAMC,WACtBb,IAAKJ,EAAWgB,MAAME,QAExB,6BACE,gCAASlB,EAAWc,WACpB,2BAAId,EAAWmB,cAEjB,kBAAC,IAAD,aCrDG9B,EAJa,WAC1B,OAAO,2CCUM+B,EAPU,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWlC,IACjC,kBAAC,IAAD,CAAOgC,KAAK,cAAcE,UAAWC,MCO1BC,EATO,kBACpB,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCRJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.86cf0223.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/githubbackground.0b819d63.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","import { createGlobalStyle } from 'styled-components';\n\nimport githubBackground from '../assets/githubbackground.svg';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  body {\n    background: #F0F0F5 url(${githubBackground}) no-repeat 70% top;\n    -webkit-font-smoothing: antialiased;\n  }\n\n  body, input, button {\n    font: 16px Roboto, sans-serif;\n  }\n\n  #root {\n    max-width: 960px;\n    margin: 0 auto;\n    padding: 40px 20px;\n  }\n`;\n","import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com',\n});\n\nexport default api;\n","import styled from 'styled-components';\nimport { shade } from 'polished';\n\nexport const Title = styled.h1`\n  font-size: 48px;\n  color: #3a3a3a;\n  max-width: 450px;\n  line-height: 56px;\n\n  margin-top: 80px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  margin-top: 40px;\n  max-width: 700px;\n\n  input {\n    flex: 1;\n    height: 70px;\n    padding: 0 24px;\n    border: 0;\n    border-radius: 5px 0 0 5px;\n    color: #3a3a3a;\n\n    &::placeholder {\n      color: #a8a8b3;\n    }\n  }\n\n  button {\n    width: 210px;\n    height: 70px;\n    background: #04d361;\n    border-radius: 0px 5px 5px 0px;\n    border: 0;\n    color: #fff;\n    font-weight: bold;\n    transition: background-color 0.2s;\n\n    &:hover {\n      background: ${shade(0.2, '#04d361')};\n    }\n  }\n`;\n\nexport const Repositories = styled.div`\n  margin-top: 80px;\n  max-width: 700px;\n\n  a {\n    background: #fff;\n    border-radius: 5px;\n    width: 100%;\n    padding: 24px;\n    display: block;\n    text-decoration: none;\n\n    display: flex;\n    align-items: center;\n    transition: transform 0.2s;\n\n    &:hover {\n      transform: translateX(10px);\n    }\n\n    & + a {\n      margin-top: 16px;\n    }\n  }\n\n  img {\n    width: 64px;\n    height: 64px;\n    border-radius: 50%;\n  }\n\n  div {\n    margin-left: 16px;\n\n    strong {\n      font-size: 20px;\n      color: #3d3d4d;\n    }\n\n    p {\n      font-size: 18px;\n      color: #a8a8b3;\n      margin-top: 4px;\n    }\n  }\n\n  svg {\n    margin-left: auto;\n    color: #cbcbd6;\n  }\n`;\n","import React, { useState, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n\n    const response = await api.get<Repository>(`/repos/${newRepo}`);\n\n    const repository = response.data;\n\n    setRepositories([...repositories, repository]);\n    setNewRepo('');\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositórios no Github</Title>\n\n      <Form onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      <Repositories>\n        {repositories.map(repository => (\n          <a key={repository.full_name} href=\"teste\">\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n","import React from 'react';\n\nconst Dashboard: React.FC = () => {\n  return <h1>Repository</h1>;\n};\n\nexport default Dashboard;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport Dashboard from '../pages/Dashboard';\nimport Repository from '../pages/Repository';\n\nconst Routes: React.FC = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard} />\n    <Route path=\"/repository\" component={Repository} />\n  </Switch>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport GlobalStyle from './styles/global';\n\nimport Routes from './routes';\n\nconst App: React.FC = () => (\n  <>\n    <BrowserRouter>\n      <Routes />\n    </BrowserRouter>\n    <GlobalStyle />\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}